version: '3'
 
services:
  merlin_unchained:
    image: johncapobianco/merlin_unchained:merlin
    build: 
      context: ./
      dockerfile: ./docker/dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - pgadmin
      - redis
      - flower
      - merlin_celery_beat00
      - prometheus
      - elasticsearch
      - kibana
      - elasticvue
      - dejavu
      - heimdall
      - grafana
    environment:
      - USE_S3=FALSE
      - AWS_ACCESS_KEY_ID={{ your S3 user access key here }}
      - AWS_SECRET_ACCESS_KEY={{ your S3 user secret key here }}
      - AWS_STORAGE_BUCKET_NAME={{ your S3 bucket here }}
  db:
    image: 'postgres'
    environment:
      - POSTGRES_USER=merlin
      - POSTGRES_PASSWORD=merlin
      - POSTGRES_DB=merlin
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: merlin
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      - db
  flower:  
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379
      - FLOWER_PORT=8888
    ports:  
      - 8888:8888
    depends_on:
      - redis
      - merlin_celery_beat00
  redis:
    image: "redis:alpine"
    command: redis-server
    ports:
     - "6379:6379"     
  merlin_celery_beat00:
    build: 
      context: ./
      dockerfile: ./docker/dockerfile
    command: bash -c "cd /merlin/ && celery -A merlin worker --beat -l INFO"
    restart: on-failure
    volumes:
      - ./merlin/stickydata:/opt/merlin/stickydata
    depends_on:
      - redis
  prometheus:
    image: prom/prometheus:v2.21.0
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.3
    container_name: elasticsearch
    user: "1000:1000"
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - ELASTIC_PASSWORD=merlin
      - http.cors.enabled=true
      - http.cors.allow-origin=/.*/      
    ports:
      - 9200:9200
    volumes:
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12
      - elasticdata01:/usr/share/elasticsearch/data:rw
  elasticvue:
    image: cars10/elasticvue
    container_name: elasticvue
    ports:
      - 8080:8080   
    depends_on:
      - elasticsearch
  dejavu:
    image: appbaseio/dejavu:3.4.7
    container_name: dejavu
    ports:
      - '1358:1358'
    links:
      - elasticsearch            
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.3
    depends_on:
      - elasticsearch
    container_name: kibana
    ports:
      - 9300:5601
    environment:
      SERVERNAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: merlin
      SERVER_SSL_ENABLED: "false"
  heimdall:
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./heimdall/config:/config
    ports:
      - 9000:80
    restart: unless-stopped
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    env_file: .gfenv

volumes:
  prometheus-data:
  elasticdata01:
    driver: local
  pgadmin:
    driver: local